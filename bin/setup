#!/bin/bash
set -e
sudo apt install git snapd i3 zsh tmux ripgrep fd-find xclip unzip -y
sudo snap install alacritty --classic

# /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/JetBrains/JetBrainsMono/master/install_manual.sh)"

if [ ! -d "$HOME/.bin" ]; then
    mkdir $HOME/.bin
else
    echo "Directory .bin already exists."
fi

if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
else
    echo "tmux-plugins/tpm already exists."
fi

if [ ! -d "$HOME/.oh-my-zsh" ]; then
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
    
else
    echo "Oh My Zsh is already installed."
fi

if ! command -v zoxide &> /dev/null; then
    curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
else
    echo "zoxide is already installed."
fi

if [ ! -d "$HOME/.fzf" ]; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install
else
    echo "fzf is already installed."
fi

echo "Would you like to install neovim from source? (y/n)"
read -r response
if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
    echo "Installing neovim..."
    sudo apt-get install ninja-build gettext cmake unzip curl build-essential
    git clone https://github.com/neovim/neovim
    cd neovim && make CMAKE_BUILD_TYPE=Release
    git checkout stable
    cd build && cpack -G DEB && sudo dpkg -i nvim-linux64.deb
    cd ../..
    rm -rf neovim
else
    echo "Skipping neovim installation."
fi

sudo /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/kevin7254/dotfiles/master/bin/dotfiles_backup)"

echo "Done"
